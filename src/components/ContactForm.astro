---
// ContactForm.astro
---

<section id="contact" class="bg-gradient-to-br from-purple-50 to-pink-50 py-16 px-4">
  <div class="max-w-4xl mx-auto">
    <div class="text-center mb-12">
      <h2 id="contact-title" class="text-4xl font-bold text-gray-800 mb-4">¿Tienes una idea en mente?</h2>
      <p id="contact-subtitle" class="text-xl text-gray-600">Cuéntanos sobre tu proyecto y te ayudaremos a hacerlo realidad</p>
    </div>
    
    <div class="bg-white rounded-2xl shadow-xl p-8 md:p-12">
      <form id="contactForm" class="space-y-6">
        <div class="grid md:grid-cols-2 gap-6">
          <div>
            <label id="contact-name-label" for="nombre" class="block text-sm font-semibold text-gray-700 mb-2">
              Nombre *
            </label>
            <input 
              type="text" 
              id="nombre" 
              name="nombre" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200"
              placeholder="Tu nombre completo"
            />
          </div>
          
          <div>
            <label id="contact-email-label" for="email" class="block text-sm font-semibold text-gray-700 mb-2">
              Email *
            </label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200"
              placeholder="tu@email.com"
            />
          </div>
        </div>
        
        <div>
          <label id="contact-message-label" for="consulta" class="block text-sm font-semibold text-gray-700 mb-2">
            Consulta/Idea *
          </label>
          <textarea 
            id="consulta" 
            name="consulta" 
            required
            rows="5"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200 resize-vertical"
            placeholder="Cuéntanos sobre tu proyecto, evento o idea..."
          ></textarea>
        </div>
        
        <div class="text-center">
          <button 
            id="contact-submit-btn"
            type="submit" 
            class="bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold py-3 px-8 rounded-lg hover:from-purple-700 hover:to-pink-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl"
          >
            Enviar Consulta
          </button>
        </div>
        
        <div id="formMessage" class="hidden text-center p-4 rounded-lg"></div>
      </form>
    </div>
  </div>
</section>

<script>
  import { translations } from '../utils/translations.js';
  
  // Función para obtener el idioma actual
  function getCurrentLanguage() {
    return localStorage.getItem('language') || 'es';
  }
  
  // Función para inicializar traducciones del formulario
  function initContactFormTranslations() {
    const lang = getCurrentLanguage();
    const t = translations[lang] || translations['es'];
    
    // Actualizar textos del formulario
    const titleElement = document.getElementById('contact-title');
    const subtitleElement = document.getElementById('contact-subtitle');
    const nameLabelElement = document.getElementById('contact-name-label');
    const emailLabelElement = document.getElementById('contact-email-label');
    const messageLabelElement = document.getElementById('contact-message-label');
    const submitBtnElement = document.getElementById('contact-submit-btn');
    
    if (titleElement) titleElement.textContent = t.contactTitle;
    if (subtitleElement) subtitleElement.textContent = t.contactSubtitle;
    if (nameLabelElement) nameLabelElement.textContent = t.nameLabel;
    if (emailLabelElement) emailLabelElement.textContent = t.emailLabel;
    if (messageLabelElement) messageLabelElement.textContent = t.messageLabel;
    if (submitBtnElement) submitBtnElement.textContent = t.submitButton;
    
    // Actualizar placeholders
    const nameInput = document.querySelector('#contact input[name="nombre"]');
    const emailInput = document.querySelector('#contact input[name="email"]');
    const messageTextarea = document.querySelector('#contact textarea[name="consulta"]');
    
    if (nameInput) nameInput.placeholder = t.namePlaceholder;
    if (emailInput) emailInput.placeholder = t.emailPlaceholder;
    if (messageTextarea) messageTextarea.placeholder = t.messagePlaceholder;
  }
  
  // Inicializar traducciones cuando se carga el componente
  document.addEventListener('DOMContentLoaded', initContactFormTranslations);
  
  // Escuchar cambios de idioma
  window.addEventListener('storage', (e) => {
    if (e.key === 'language') {
      initContactFormTranslations();
    }
  });
  
  // También escuchar eventos personalizados de cambio de idioma
  document.addEventListener('languageChanged', initContactFormTranslations);
  
  // Función para obtener texto traducido
  function getTranslatedText(key: string) {
    const lang = getCurrentLanguage();
    return translations[lang as keyof typeof translations][key as keyof typeof translations['es']] || translations['es'][key as keyof typeof translations['es']];
  }
  
  const contactForm = document.getElementById('contactForm');
  if (contactForm) {
    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const form = e.target as HTMLFormElement;
      const formData = new FormData(form);
      const data = {
        nombre: formData.get('nombre'),
        email: formData.get('email'),
        consulta: formData.get('consulta'),
        language: getCurrentLanguage() // Agregar idioma al envío
      };
      
      const messageDiv = document.getElementById('formMessage');
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    
    // Mostrar estado de carga
    submitButton.disabled = true;
    submitButton.textContent = getTranslatedText('sendingButton');
    
    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      });
      
      const result = await response.json();
      
      if (response.ok) {
        if (messageDiv) {
          messageDiv.className = 'text-center p-4 rounded-lg bg-green-100 text-green-800 border border-green-200';
          messageDiv.textContent = getTranslatedText('successMessage');
        }
        form.reset();
      } else {
        throw new Error(result.error || getTranslatedText('errorMessage'));
      }
    } catch (error) {
      if (messageDiv) {
        messageDiv.className = 'text-center p-4 rounded-lg bg-red-100 text-red-800 border border-red-200';
        messageDiv.textContent = getTranslatedText('errorMessage');
      }
    } finally {
      if (messageDiv) {
        messageDiv.classList.remove('hidden');
      }
      submitButton.disabled = false;
      submitButton.textContent = getTranslatedText('submitButton');
      
      // Ocultar mensaje después de 5 segundos
      setTimeout(() => {
        if (messageDiv) {
          messageDiv.classList.add('hidden');
        }
      }, 5000);
    }
    });
  }
</script>